name: Build Onion Tool
on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'
  push:
    paths:
      - 'src/**'
      - 'files/**'
jobs:
  BuildLinux:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.ONION_GIT_PUBLIC_TOKEN}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v1
      - uses: lukka/get-cmake@v3.23.0
      - run: |
              git config --global user.email "actions@github.com"
              git config --global user.name "GitHub Actions"
              ./build_linux.sh
  BuildWindows:
    runs-on: windows-2022
    needs: BuildLinux
    env:
      GITHUB_TOKEN: ${{secrets.ONION_GIT_PUBLIC_TOKEN}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v1
      - uses: lukka/get-cmake@v3.23.0
      - run: |
              git config --global user.email "actions@github.com"
              git config --global user.name "GitHub Actions"
              ./build_windows.bat 
  BuildMac:
    runs-on: macos-12
    needs: BuildLinux
    env:
      GITHUB_TOKEN: ${{secrets.ONION_GIT_PUBLIC_TOKEN}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v1
      - uses: lukka/get-cmake@v3.23.0
      - run: |
              git config --global user.email "actions@github.com"
              git config --global user.name "GitHub Actions"
              ./build_darwin.sh
  TestWindows:
    runs-on: windows-2022
    needs: BuildWindows
    strategy:
      matrix:
        configuration: [Release, Debug, Checked, Final, Profile]
        test: [tests/app_self_contained, tests/app_with_lib, tests/app_with_lib_and_tests, tests/app_with_local_static_lib, tests/app_with_external_static_lib, tests/app_with_thirdparty_dep, tests/common_static_lib, tests/bison_file, tests/detached_lib, tests/embed_file, tests/module_with_static_lib]
        libs: [shared, static]
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@v3.23.0
      - run: |
                git clone https://github.com/BareMetalEngine/onion.git C:\onion
                pushd ${{matrix.test}}
                C:\onion\onion.exe configure
                C:\onion\onion.exe make -libs=${{matrix.libs}}
                C:\onion\onion.exe build -config=${{matrix.configuration}} 
                C:\onion\onion.exe test -config=${{matrix.configuration}} 
  TestLinux:
    runs-on: ubuntu-22.04
    needs: BuildLinux
    strategy:
      matrix:
        configuration: [Release, Debug, Checked, Final, Profile]
        test: [tests/app_self_contained, tests/app_with_lib, tests/app_with_lib_and_tests, tests/app_with_local_static_lib, tests/app_with_external_static_lib, tests/app_with_thirdparty_dep, tests/common_static_lib, tests/bison_file, tests/detached_lib, tests/embed_file, tests/module_with_static_lib]
        libs: [static]
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@v3.23.0
      - run: |
                git clone https://github.com/BareMetalEngine/onion.git ~/onion/
                pushd ${{matrix.test}}
                ~/onion/onion configure
                ~/onion/onion make -libs=${{matrix.libs}}
                ~/onion/onion build -config=${{matrix.configuration}} 
                ~/onion/onion test -config=${{matrix.configuration}} 
  TestMac:
    runs-on: macos-12
    needs: BuildMac
    strategy:
      matrix:
        configuration: [Release, Debug, Checked, Final, Profile]
        test: [tests/app_self_contained, tests/app_with_lib, tests/app_with_lib_and_tests, tests/app_with_local_static_lib, tests/app_with_external_static_lib, tests/app_with_thirdparty_dep, tests/common_static_lib, tests/bison_file, tests/detached_lib, tests/embed_file, tests/module_with_static_lib]
        libs: [static]
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@v3.23.0
      - run: |
                git clone https://github.com/BareMetalEngine/onion.git ~/onion/
                pushd ${{matrix.test}}
                ~/onion/onion_mac configure
                ~/onion/onion_mac make -libs=${{matrix.libs}}
                ~/onion/onion_mac build -config=${{matrix.configuration}}
                ~/onion/onion_mac test -config=${{matrix.configuration}}
